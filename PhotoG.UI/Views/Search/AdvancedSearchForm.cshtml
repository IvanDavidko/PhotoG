@model PhotoG.DAL.Entities.AdvancedSearchModel

<form id="advancedSearchForm" name="advancedSearchForm" action="/search/AdvancedSearch" method="post">
    <div class="row error-message">
        @Html.ValidationSummary()
    </div>

    @Html.AntiForgeryToken()

    <div class="col-md-8 advanced-search text-right">
            <div class="form-group">
                @Html.LabelFor(x => x.Title, new { @class = "col-sm-4 " })
                <div class="col-sm-8 margin-bottom no-padding">
                    @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Title, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.CameraModel, new { @class = "col-sm-4 " })
                <div class="col-sm-8 margin-bottom no-padding">
                    @Html.TextBoxFor(model => model.CameraModel, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.CameraModel, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.PhotosetDate, new { @class = "col-sm-4 " })
                <div class="col-sm-8 margin-bottom no-padding">
                    @*@Html.EditorFor(model => model.PhotosetDate, new { htmlAttributes = new { @class = "form-control" } })*@
                    <input name="PhotosetDate" class="form-control datepicker" />
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.LensFocalLength, new { @class = "col-sm-4 " })
                <div class="col-sm-8 margin-bottom no-padding">
                    <input type="number" step="0.01" class="form-control"
                           name="LensFocalLength" value="@(Model?.LensFocalLength)">
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Diaphragm, new { @class = "col-sm-4 " })
                <div class="col-sm-8 margin-bottom no-padding">
                    @Html.TextBoxFor(model => model.Diaphragm, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.Diaphragm, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.ShutterSpeed, new { @class = "col-sm-4 " })
                <div class="col-sm-8 margin-bottom no-padding">
                    <input type="number" step="0.01" class="form-control"
                           name="ShutterSpeed" value="@(Model?.ShutterSpeed)">
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.ISO, new { @class = "col-sm-4 " })
                <div class="col-sm-8 margin-bottom no-padding">
                    <input type="number" step="0.01" class="form-control"
                           name="ISO" value="@(Model?.ISO)">
                </div>
            </div>
        <div class="form-group">
            @Html.LabelFor(x => x.FlashInUse, new {@class = "col-sm-4 "})
            <div class="col-sm-8 margin-bottom no-padding">
                @if (Model != null && Model.FlashInUse == null)
                {
                    Model.FlashInUse = false;
                }
                <input type="checkbox" class="form-control" onchange="$('#advancedSearchForm #FlashInUse').val($(this).prop('checked'));" @(Model.FlashInUse.Value ? "checked=\"checked\"" : "") />
                <input type="hidden" id="FlashInUse" name="FlashInUse" @(Model.FlashInUse.Value ? "value=\"true\"" : "") />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-7 col-md-5">
                <input type="submit" class="btn btn-primary btn-block" value="Search" />
            </div>
        </div>
    </div>
</form>